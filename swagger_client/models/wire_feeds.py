# coding: utf-8

"""
    CMS-Backend API

    This is API documentation of CMS-Backend  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: htdevteam@hindustantimes.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class WireFeeds(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'agency': 'str',
        'articles_id_list': 'list[int]',
        'auto_publish': 'bool',
        'auto_publish_error': 'list[str]',
        'by_line': 'str',
        'by_line_title': 'str',
        'caption': 'str',
        'city': 'str',
        'copy_counter': 'int',
        'country_name': 'str',
        'cover_image_url': 'str',
        'credit': 'str',
        'domain_id': 'str',
        'feed_sub_type': 'str',
        'feed_type': 'str',
        'file_name': 'str',
        'first_published_date': 'str',
        'first_published_timestamp': 'int',
        'headline': 'str',
        'id': 'str',
        'issue_date': 'str',
        'keyword': 'str',
        'language': 'str',
        'last_modified_date': 'str',
        'location': 'str',
        'object_name': 'str',
        'picked_up_flag': 'int',
        'prepub_feed': 'bool',
        'section': 'str',
        'seo_score_id_list': 'list[str]',
        'source': 'str',
        'status': 'str',
        'story': 'list[WireFeedsStory]',
        'story_published_counter': 'int',
        'suggest': 'Completion',
        'thumbnail_image_name': 'str',
        'timestamp': 'int',
        'urgency': 'str',
        'wire_published_stories': 'list[WirePublishedStory]'
    }

    attribute_map = {
        'agency': 'agency',
        'articles_id_list': 'articlesIdList',
        'auto_publish': 'autoPublish',
        'auto_publish_error': 'autoPublishError',
        'by_line': 'byLine',
        'by_line_title': 'byLineTitle',
        'caption': 'caption',
        'city': 'city',
        'copy_counter': 'copyCounter',
        'country_name': 'countryName',
        'cover_image_url': 'coverImageUrl',
        'credit': 'credit',
        'domain_id': 'domainId',
        'feed_sub_type': 'feedSubType',
        'feed_type': 'feedType',
        'file_name': 'fileName',
        'first_published_date': 'firstPublishedDate',
        'first_published_timestamp': 'firstPublishedTimestamp',
        'headline': 'headline',
        'id': 'id',
        'issue_date': 'issueDate',
        'keyword': 'keyword',
        'language': 'language',
        'last_modified_date': 'lastModifiedDate',
        'location': 'location',
        'object_name': 'objectName',
        'picked_up_flag': 'pickedUpFlag',
        'prepub_feed': 'prepubFeed',
        'section': 'section',
        'seo_score_id_list': 'seoScoreIdList',
        'source': 'source',
        'status': 'status',
        'story': 'story',
        'story_published_counter': 'storyPublishedCounter',
        'suggest': 'suggest',
        'thumbnail_image_name': 'thumbnailImageName',
        'timestamp': 'timestamp',
        'urgency': 'urgency',
        'wire_published_stories': 'wirePublishedStories'
    }

    def __init__(self, agency=None, articles_id_list=None, auto_publish=None, auto_publish_error=None, by_line=None, by_line_title=None, caption=None, city=None, copy_counter=None, country_name=None, cover_image_url=None, credit=None, domain_id=None, feed_sub_type=None, feed_type=None, file_name=None, first_published_date=None, first_published_timestamp=None, headline=None, id=None, issue_date=None, keyword=None, language=None, last_modified_date=None, location=None, object_name=None, picked_up_flag=None, prepub_feed=None, section=None, seo_score_id_list=None, source=None, status=None, story=None, story_published_counter=None, suggest=None, thumbnail_image_name=None, timestamp=None, urgency=None, wire_published_stories=None):  # noqa: E501
        """WireFeeds - a model defined in Swagger"""  # noqa: E501
        self._agency = None
        self._articles_id_list = None
        self._auto_publish = None
        self._auto_publish_error = None
        self._by_line = None
        self._by_line_title = None
        self._caption = None
        self._city = None
        self._copy_counter = None
        self._country_name = None
        self._cover_image_url = None
        self._credit = None
        self._domain_id = None
        self._feed_sub_type = None
        self._feed_type = None
        self._file_name = None
        self._first_published_date = None
        self._first_published_timestamp = None
        self._headline = None
        self._id = None
        self._issue_date = None
        self._keyword = None
        self._language = None
        self._last_modified_date = None
        self._location = None
        self._object_name = None
        self._picked_up_flag = None
        self._prepub_feed = None
        self._section = None
        self._seo_score_id_list = None
        self._source = None
        self._status = None
        self._story = None
        self._story_published_counter = None
        self._suggest = None
        self._thumbnail_image_name = None
        self._timestamp = None
        self._urgency = None
        self._wire_published_stories = None
        self.discriminator = None
        if agency is not None:
            self.agency = agency
        if articles_id_list is not None:
            self.articles_id_list = articles_id_list
        if auto_publish is not None:
            self.auto_publish = auto_publish
        if auto_publish_error is not None:
            self.auto_publish_error = auto_publish_error
        if by_line is not None:
            self.by_line = by_line
        if by_line_title is not None:
            self.by_line_title = by_line_title
        if caption is not None:
            self.caption = caption
        if city is not None:
            self.city = city
        if copy_counter is not None:
            self.copy_counter = copy_counter
        if country_name is not None:
            self.country_name = country_name
        if cover_image_url is not None:
            self.cover_image_url = cover_image_url
        if credit is not None:
            self.credit = credit
        if domain_id is not None:
            self.domain_id = domain_id
        if feed_sub_type is not None:
            self.feed_sub_type = feed_sub_type
        if feed_type is not None:
            self.feed_type = feed_type
        if file_name is not None:
            self.file_name = file_name
        if first_published_date is not None:
            self.first_published_date = first_published_date
        if first_published_timestamp is not None:
            self.first_published_timestamp = first_published_timestamp
        if headline is not None:
            self.headline = headline
        if id is not None:
            self.id = id
        if issue_date is not None:
            self.issue_date = issue_date
        if keyword is not None:
            self.keyword = keyword
        if language is not None:
            self.language = language
        if last_modified_date is not None:
            self.last_modified_date = last_modified_date
        if location is not None:
            self.location = location
        if object_name is not None:
            self.object_name = object_name
        if picked_up_flag is not None:
            self.picked_up_flag = picked_up_flag
        if prepub_feed is not None:
            self.prepub_feed = prepub_feed
        if section is not None:
            self.section = section
        if seo_score_id_list is not None:
            self.seo_score_id_list = seo_score_id_list
        if source is not None:
            self.source = source
        if status is not None:
            self.status = status
        if story is not None:
            self.story = story
        if story_published_counter is not None:
            self.story_published_counter = story_published_counter
        if suggest is not None:
            self.suggest = suggest
        if thumbnail_image_name is not None:
            self.thumbnail_image_name = thumbnail_image_name
        if timestamp is not None:
            self.timestamp = timestamp
        if urgency is not None:
            self.urgency = urgency
        if wire_published_stories is not None:
            self.wire_published_stories = wire_published_stories

    @property
    def agency(self):
        """Gets the agency of this WireFeeds.  # noqa: E501


        :return: The agency of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._agency

    @agency.setter
    def agency(self, agency):
        """Sets the agency of this WireFeeds.


        :param agency: The agency of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._agency = agency

    @property
    def articles_id_list(self):
        """Gets the articles_id_list of this WireFeeds.  # noqa: E501


        :return: The articles_id_list of this WireFeeds.  # noqa: E501
        :rtype: list[int]
        """
        return self._articles_id_list

    @articles_id_list.setter
    def articles_id_list(self, articles_id_list):
        """Sets the articles_id_list of this WireFeeds.


        :param articles_id_list: The articles_id_list of this WireFeeds.  # noqa: E501
        :type: list[int]
        """

        self._articles_id_list = articles_id_list

    @property
    def auto_publish(self):
        """Gets the auto_publish of this WireFeeds.  # noqa: E501


        :return: The auto_publish of this WireFeeds.  # noqa: E501
        :rtype: bool
        """
        return self._auto_publish

    @auto_publish.setter
    def auto_publish(self, auto_publish):
        """Sets the auto_publish of this WireFeeds.


        :param auto_publish: The auto_publish of this WireFeeds.  # noqa: E501
        :type: bool
        """

        self._auto_publish = auto_publish

    @property
    def auto_publish_error(self):
        """Gets the auto_publish_error of this WireFeeds.  # noqa: E501


        :return: The auto_publish_error of this WireFeeds.  # noqa: E501
        :rtype: list[str]
        """
        return self._auto_publish_error

    @auto_publish_error.setter
    def auto_publish_error(self, auto_publish_error):
        """Sets the auto_publish_error of this WireFeeds.


        :param auto_publish_error: The auto_publish_error of this WireFeeds.  # noqa: E501
        :type: list[str]
        """

        self._auto_publish_error = auto_publish_error

    @property
    def by_line(self):
        """Gets the by_line of this WireFeeds.  # noqa: E501


        :return: The by_line of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._by_line

    @by_line.setter
    def by_line(self, by_line):
        """Sets the by_line of this WireFeeds.


        :param by_line: The by_line of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._by_line = by_line

    @property
    def by_line_title(self):
        """Gets the by_line_title of this WireFeeds.  # noqa: E501


        :return: The by_line_title of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._by_line_title

    @by_line_title.setter
    def by_line_title(self, by_line_title):
        """Sets the by_line_title of this WireFeeds.


        :param by_line_title: The by_line_title of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._by_line_title = by_line_title

    @property
    def caption(self):
        """Gets the caption of this WireFeeds.  # noqa: E501


        :return: The caption of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._caption

    @caption.setter
    def caption(self, caption):
        """Sets the caption of this WireFeeds.


        :param caption: The caption of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._caption = caption

    @property
    def city(self):
        """Gets the city of this WireFeeds.  # noqa: E501


        :return: The city of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this WireFeeds.


        :param city: The city of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._city = city

    @property
    def copy_counter(self):
        """Gets the copy_counter of this WireFeeds.  # noqa: E501


        :return: The copy_counter of this WireFeeds.  # noqa: E501
        :rtype: int
        """
        return self._copy_counter

    @copy_counter.setter
    def copy_counter(self, copy_counter):
        """Sets the copy_counter of this WireFeeds.


        :param copy_counter: The copy_counter of this WireFeeds.  # noqa: E501
        :type: int
        """

        self._copy_counter = copy_counter

    @property
    def country_name(self):
        """Gets the country_name of this WireFeeds.  # noqa: E501


        :return: The country_name of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._country_name

    @country_name.setter
    def country_name(self, country_name):
        """Sets the country_name of this WireFeeds.


        :param country_name: The country_name of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._country_name = country_name

    @property
    def cover_image_url(self):
        """Gets the cover_image_url of this WireFeeds.  # noqa: E501


        :return: The cover_image_url of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._cover_image_url

    @cover_image_url.setter
    def cover_image_url(self, cover_image_url):
        """Sets the cover_image_url of this WireFeeds.


        :param cover_image_url: The cover_image_url of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._cover_image_url = cover_image_url

    @property
    def credit(self):
        """Gets the credit of this WireFeeds.  # noqa: E501


        :return: The credit of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._credit

    @credit.setter
    def credit(self, credit):
        """Sets the credit of this WireFeeds.


        :param credit: The credit of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._credit = credit

    @property
    def domain_id(self):
        """Gets the domain_id of this WireFeeds.  # noqa: E501


        :return: The domain_id of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._domain_id

    @domain_id.setter
    def domain_id(self, domain_id):
        """Sets the domain_id of this WireFeeds.


        :param domain_id: The domain_id of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._domain_id = domain_id

    @property
    def feed_sub_type(self):
        """Gets the feed_sub_type of this WireFeeds.  # noqa: E501


        :return: The feed_sub_type of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._feed_sub_type

    @feed_sub_type.setter
    def feed_sub_type(self, feed_sub_type):
        """Sets the feed_sub_type of this WireFeeds.


        :param feed_sub_type: The feed_sub_type of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._feed_sub_type = feed_sub_type

    @property
    def feed_type(self):
        """Gets the feed_type of this WireFeeds.  # noqa: E501


        :return: The feed_type of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._feed_type

    @feed_type.setter
    def feed_type(self, feed_type):
        """Sets the feed_type of this WireFeeds.


        :param feed_type: The feed_type of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._feed_type = feed_type

    @property
    def file_name(self):
        """Gets the file_name of this WireFeeds.  # noqa: E501


        :return: The file_name of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this WireFeeds.


        :param file_name: The file_name of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._file_name = file_name

    @property
    def first_published_date(self):
        """Gets the first_published_date of this WireFeeds.  # noqa: E501


        :return: The first_published_date of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._first_published_date

    @first_published_date.setter
    def first_published_date(self, first_published_date):
        """Sets the first_published_date of this WireFeeds.


        :param first_published_date: The first_published_date of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._first_published_date = first_published_date

    @property
    def first_published_timestamp(self):
        """Gets the first_published_timestamp of this WireFeeds.  # noqa: E501


        :return: The first_published_timestamp of this WireFeeds.  # noqa: E501
        :rtype: int
        """
        return self._first_published_timestamp

    @first_published_timestamp.setter
    def first_published_timestamp(self, first_published_timestamp):
        """Sets the first_published_timestamp of this WireFeeds.


        :param first_published_timestamp: The first_published_timestamp of this WireFeeds.  # noqa: E501
        :type: int
        """

        self._first_published_timestamp = first_published_timestamp

    @property
    def headline(self):
        """Gets the headline of this WireFeeds.  # noqa: E501


        :return: The headline of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._headline

    @headline.setter
    def headline(self, headline):
        """Sets the headline of this WireFeeds.


        :param headline: The headline of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._headline = headline

    @property
    def id(self):
        """Gets the id of this WireFeeds.  # noqa: E501


        :return: The id of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this WireFeeds.


        :param id: The id of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def issue_date(self):
        """Gets the issue_date of this WireFeeds.  # noqa: E501


        :return: The issue_date of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._issue_date

    @issue_date.setter
    def issue_date(self, issue_date):
        """Sets the issue_date of this WireFeeds.


        :param issue_date: The issue_date of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._issue_date = issue_date

    @property
    def keyword(self):
        """Gets the keyword of this WireFeeds.  # noqa: E501


        :return: The keyword of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._keyword

    @keyword.setter
    def keyword(self, keyword):
        """Sets the keyword of this WireFeeds.


        :param keyword: The keyword of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._keyword = keyword

    @property
    def language(self):
        """Gets the language of this WireFeeds.  # noqa: E501


        :return: The language of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this WireFeeds.


        :param language: The language of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._language = language

    @property
    def last_modified_date(self):
        """Gets the last_modified_date of this WireFeeds.  # noqa: E501


        :return: The last_modified_date of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date):
        """Sets the last_modified_date of this WireFeeds.


        :param last_modified_date: The last_modified_date of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._last_modified_date = last_modified_date

    @property
    def location(self):
        """Gets the location of this WireFeeds.  # noqa: E501


        :return: The location of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this WireFeeds.


        :param location: The location of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._location = location

    @property
    def object_name(self):
        """Gets the object_name of this WireFeeds.  # noqa: E501


        :return: The object_name of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._object_name

    @object_name.setter
    def object_name(self, object_name):
        """Sets the object_name of this WireFeeds.


        :param object_name: The object_name of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._object_name = object_name

    @property
    def picked_up_flag(self):
        """Gets the picked_up_flag of this WireFeeds.  # noqa: E501


        :return: The picked_up_flag of this WireFeeds.  # noqa: E501
        :rtype: int
        """
        return self._picked_up_flag

    @picked_up_flag.setter
    def picked_up_flag(self, picked_up_flag):
        """Sets the picked_up_flag of this WireFeeds.


        :param picked_up_flag: The picked_up_flag of this WireFeeds.  # noqa: E501
        :type: int
        """

        self._picked_up_flag = picked_up_flag

    @property
    def prepub_feed(self):
        """Gets the prepub_feed of this WireFeeds.  # noqa: E501


        :return: The prepub_feed of this WireFeeds.  # noqa: E501
        :rtype: bool
        """
        return self._prepub_feed

    @prepub_feed.setter
    def prepub_feed(self, prepub_feed):
        """Sets the prepub_feed of this WireFeeds.


        :param prepub_feed: The prepub_feed of this WireFeeds.  # noqa: E501
        :type: bool
        """

        self._prepub_feed = prepub_feed

    @property
    def section(self):
        """Gets the section of this WireFeeds.  # noqa: E501


        :return: The section of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._section

    @section.setter
    def section(self, section):
        """Sets the section of this WireFeeds.


        :param section: The section of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._section = section

    @property
    def seo_score_id_list(self):
        """Gets the seo_score_id_list of this WireFeeds.  # noqa: E501


        :return: The seo_score_id_list of this WireFeeds.  # noqa: E501
        :rtype: list[str]
        """
        return self._seo_score_id_list

    @seo_score_id_list.setter
    def seo_score_id_list(self, seo_score_id_list):
        """Sets the seo_score_id_list of this WireFeeds.


        :param seo_score_id_list: The seo_score_id_list of this WireFeeds.  # noqa: E501
        :type: list[str]
        """

        self._seo_score_id_list = seo_score_id_list

    @property
    def source(self):
        """Gets the source of this WireFeeds.  # noqa: E501


        :return: The source of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this WireFeeds.


        :param source: The source of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._source = source

    @property
    def status(self):
        """Gets the status of this WireFeeds.  # noqa: E501


        :return: The status of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this WireFeeds.


        :param status: The status of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def story(self):
        """Gets the story of this WireFeeds.  # noqa: E501


        :return: The story of this WireFeeds.  # noqa: E501
        :rtype: list[WireFeedsStory]
        """
        return self._story

    @story.setter
    def story(self, story):
        """Sets the story of this WireFeeds.


        :param story: The story of this WireFeeds.  # noqa: E501
        :type: list[WireFeedsStory]
        """

        self._story = story

    @property
    def story_published_counter(self):
        """Gets the story_published_counter of this WireFeeds.  # noqa: E501


        :return: The story_published_counter of this WireFeeds.  # noqa: E501
        :rtype: int
        """
        return self._story_published_counter

    @story_published_counter.setter
    def story_published_counter(self, story_published_counter):
        """Sets the story_published_counter of this WireFeeds.


        :param story_published_counter: The story_published_counter of this WireFeeds.  # noqa: E501
        :type: int
        """

        self._story_published_counter = story_published_counter

    @property
    def suggest(self):
        """Gets the suggest of this WireFeeds.  # noqa: E501


        :return: The suggest of this WireFeeds.  # noqa: E501
        :rtype: Completion
        """
        return self._suggest

    @suggest.setter
    def suggest(self, suggest):
        """Sets the suggest of this WireFeeds.


        :param suggest: The suggest of this WireFeeds.  # noqa: E501
        :type: Completion
        """

        self._suggest = suggest

    @property
    def thumbnail_image_name(self):
        """Gets the thumbnail_image_name of this WireFeeds.  # noqa: E501


        :return: The thumbnail_image_name of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._thumbnail_image_name

    @thumbnail_image_name.setter
    def thumbnail_image_name(self, thumbnail_image_name):
        """Sets the thumbnail_image_name of this WireFeeds.


        :param thumbnail_image_name: The thumbnail_image_name of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._thumbnail_image_name = thumbnail_image_name

    @property
    def timestamp(self):
        """Gets the timestamp of this WireFeeds.  # noqa: E501


        :return: The timestamp of this WireFeeds.  # noqa: E501
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this WireFeeds.


        :param timestamp: The timestamp of this WireFeeds.  # noqa: E501
        :type: int
        """

        self._timestamp = timestamp

    @property
    def urgency(self):
        """Gets the urgency of this WireFeeds.  # noqa: E501


        :return: The urgency of this WireFeeds.  # noqa: E501
        :rtype: str
        """
        return self._urgency

    @urgency.setter
    def urgency(self, urgency):
        """Sets the urgency of this WireFeeds.


        :param urgency: The urgency of this WireFeeds.  # noqa: E501
        :type: str
        """

        self._urgency = urgency

    @property
    def wire_published_stories(self):
        """Gets the wire_published_stories of this WireFeeds.  # noqa: E501


        :return: The wire_published_stories of this WireFeeds.  # noqa: E501
        :rtype: list[WirePublishedStory]
        """
        return self._wire_published_stories

    @wire_published_stories.setter
    def wire_published_stories(self, wire_published_stories):
        """Sets the wire_published_stories of this WireFeeds.


        :param wire_published_stories: The wire_published_stories of this WireFeeds.  # noqa: E501
        :type: list[WirePublishedStory]
        """

        self._wire_published_stories = wire_published_stories

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(WireFeeds, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WireFeeds):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
